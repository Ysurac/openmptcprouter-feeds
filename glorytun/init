#!/bin/sh /etc/rc.common
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :
# Copyright (C) 2015 ovh.com
# Copyright (C) 2017 Ycarus (Yannick Chabanois) <ycarus@zugaina.org>

START=90
STOP=10

USE_PROCD=1
PROG_NAME=glorytun
PROG=/usr/sbin/${PROG_NAME}

_log() {
	logger -p daemon.info -t ${PROG_NAME} "$@"
}

_err() {
	logger -p daemon.err -t ${PROG_NAME} "$@"
}

validate_section() {
	uci_validate_section glorytun glorytun "${1}" \
		'enable:bool:0'      \
		'mptcp:bool:0'       \
		'mode:string'    \
		'key:string'         \
		'host:host'          \
		'port:port'          \
		'dev:string'         \
		'timeout:uinteger:10000'         \
		'chacha20:bool:0'    \
		'proto:string'
}

start_instance() {
	local enable key host port dev mptcp proto chacha20 mode multiqueue timeout

	validate_section "${1}" || {
		_err "validation failed"
		return 1
	}

	[ "${enable}" = "1" ] || return 1
	[ "${proto}" = "tcp" ] || return 1
	[ -n "${key}" ] || {
		_err "Key empty"
		return 1
	}
	[ "${key}" != "secretkey" ] || return 1
	[ -n "${port}" ] || return 1
	[ -n "${dev}" ] || return 1
	[ -n "${host}" ] || return 1

	echo "${key}" > /tmp/${PROG_NAME}-${1}.key
	[ -f "/tmp/${PROG_NAME}-${1}.key" ] || {
		_err "can't create key file"
		return 1
	}
	key=""

	if [ "$(uci -q get network.omrvpn)" != "" ]; then
		uci -q set network.omrvpn.ifname=${dev}
		uci -q commit network
	fi
	_log "starting ${PROG_NAME} ${1} instance $*"

	procd_open_instance

	procd_set_param command ${PROG} \
		keyfile /tmp/${PROG_NAME}-${1}.key \
		${port:+port "$port"} \
		${host:+host "$host"} \
		${dev:+dev "$dev"} 

	[ "${mode}" = "listener" ] && procd_append_param command listener
	[ "${mptcp}" = "1" ] && procd_append_param command mptcp
	[ "${chacha20}" = "1" ] && procd_append_param command chacha20
	[ "${multiqueue}" = "1" ] && procd_append_param command multiqueue

	procd_append_param command \
		retry count -1 const 500000 \
		timeout ${timeout} \
		keepalive count 5 idle 20 interval 2 \
		buffer-size 32768

	procd_set_param respawn 0 30 0
	procd_set_param file /tmp/${PROG_NAME}-${1}.key

	procd_set_param stdout 1
	procd_set_param stderr 1

	procd_close_instance
}

start_service() {
	config_load glorytun
	config_foreach start_instance glorytun
}

service_triggers() {
	procd_add_reload_trigger glorytun network
}
