//This comment and parser will ignore
//Tracer scenario(or commands) always
//starts with start keyword
//Below commands to enable Event traces on UMAC,MAC0,MAC1
seq_start;
seq_type:mem_req;
//memory size always given in KB. beow example reserves 3 buffers segments of 16 KB.
sink:etr_ddr,0x1,0x400;
seq_end;
//Below commands to enable Event traces on UMAC,MAC0,MAC1
seq_start;
seq_type:mac_event_trace;
sink:etr_ddr;
subsys_cfg_start:mac0;
swevt:0x0, 0xFFFFFFFF,0xFFFFFFFF,0x0,0x0;
hwsch:0x1, 0x6FFFF3, 0x60000, 0x00000000, 0x00000000;
rxdma:0x2, 0x3F37FE7F, 0x00017F04, 0x00000000, 0x00000000;
crypto:0x3, 0xF7DB3770, 0x00000000, 0x00000000, 0x00000000;
txpcu:0x4, 0xD6C7F4E7, 0x200801D2, 0x00000000, 0x00000000;
rxole:0x5, 0x00000000, 0xFFC00000, 0x00000000, 0x00000000;
txole:0x6, 0x641F0FF4, 0x6FF0F000, 0x00000000, 0x00000000;
mxi:0x7, 0x00122234, 0x00000000, 0x00000000, 0x00000000;
txdma:0x8, 0x39800064, 0x00000084, 0x00000000, 0x00000000;
sfm:0x9, 0xC03C0F03, 0xE, 0x00000000, 0x00000000;
subsys_cfg_end:mac0;
//subsys_cfg_start:mac1;
//swevt:0x0, 0xFFFFFFFF,0xFFFFFFFF,0x0,0x0;
//hwsch:0x8, 0xEFFF1, 0x1036052C, 0x00000000, 0x00000000;
//rxdma:0x9, 0x00003400, 0x00008000, 0x00000000, 0x00000000;
//crypto:0xa, 0xf79B3770, 0x00000000, 0x00000000, 0x00000000;
//txpcu:0xb, 0xD6C7B447, 0x000000D2, 0x00000000, 0x00000000;
//txdma:0xc, 0x00001734, 0x00000084, 0x00000000, 0x00000000;
//txole:0xd, 0x7C0FFE26, 0x00000000, 0x00000000, 0x00000000;
//pdg:0xe, 0x00C00002, 0x00000000, 0x00000000, 0x00000000;
//subsys_cfg_end:mac1;
swap:0xFFFFFFFF;
trigger_start:trc;
wfi:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
ts0:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
ts1:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
ts2:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
ts3:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
ts4:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
trigger_end:trc;
memw:0xFFFFFFFF,0xFFFFFFFF;
seq_end;
// Below commands to enable obo trace on the mac0
//seq_start;
//seq_type:mac_obo_trace;
//sink:etb_wcss;
//subsys_cfg_start:mac0;
//hwsch:0x1,0xABCDABCD;
//subsys_cfg_end:mac0;
//swap:0xABCDABCD;
//trigger_start:trc;
//wfi:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//ts0:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//ts1:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//ts2:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//ts3:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//ts4:0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF;
//trigger_end:trc;
//memw:0xFFFFFFFF,0xFFFFFFFF;
//seq_end;
// Below commands to enable TLV trace on the mac0
//seq_start;
//seq_type:mac_tlv_trace;
//sink:etb_wcss;
//subsys_cfg_start:mac0;
//tlv_port:PDG_TXDMA_TLV;
//subsys_cfg_end:mac0;
//seq_end;
// Below commands to enable q6 etm
//seq_start;
//seq_type:q6_etm_trace;
//sink:etr_ddr;
//seq_end;
// Below commands to enable umac noc traces
//seq_start;
//seq_type:umac_noc_trace;
//sink:etb_wcss;
//ctrl:0x12;
//port_sel:0x4;
//lut:0xA;
//routeid_base:0x01000000;
//routeid_mask:0x01c00000;
//addr_lo:0x0;
//addr_hi:0x0;
//win_size:0x25;
//req_opcode:0x3;
//res_status:0x3;
//fltr_len:0xF;
//async_period:0xC;
//seq_end;
// Below commands to enable umac noc traces
//seq_start;
//seq_type:phy_tlv_trace;
//sink:etr_ddr;
//seq_end;
//seq_start;
//seq_type:phy_event_trace;
//sink:etr_ddr;
//phya:0x1,0x1;
//phyb:0x1,0x1;
//seq_end;
