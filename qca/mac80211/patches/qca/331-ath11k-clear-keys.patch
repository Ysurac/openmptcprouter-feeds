From 7f105d81bc52b45b5b80353703b625cdf663a00b Mon Sep 17 00:00:00 2001
From: Karthikeyan Kathirvel <kathirve@codeaurora.org>
Date: Mon, 11 Oct 2021 17:07:21 +0530
Subject: [PATCH] ath11k: clear the keys properly when DISABLE_KEY

ath11k: clear the keys properly when DISABLE_KEY

DISABLE_KEY sets the key_len to 0, firmware will not delete the keys if
key_len is 0. Changing from security mode to open mode will cause mcast
to be still encrypted without vdev restart.

Set the proper key_len for DISABLE_KEY cmd to clear the keys in
firmware.

Without vdev restart sta state is not moved to authorized in firmware so
this cause unicast drop in firmware.

Since rsnie_present and wpaie_present field holds the old state when
moved from secure mode to open mode, this clears the wmi authorize flag,
so peer is not authorized in this case. Fix it by reseting rsnie_present
and wpaie_present when the IE is not present.

Signed-off-by: Karthikeyan Kathirvel <kathirve@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/mac.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -1225,6 +1225,13 @@ static int __ath11k_mac_setup_bcn_tmpl(s
 
 	if (cfg80211_find_ie(WLAN_EID_RSN, ies, (skb_tail_pointer(bcn) - ies)))
 		arvif->rsnie_present = true;
+	else {
+		/* rsnie_present and wpaie_present should be set
+		 * to false when hostapd changes the security from
+		 * secure to open without vdev restart
+		 */
+		arvif->rsnie_present = false;
+	}
 
 	vht_cap_ie = cfg80211_find_ie(WLAN_EID_VHT_CAPABILITY, ies, (skb_tail_pointer(bcn) - ies));
 	if (vht_cap_ie && vht_cap_ie[1] >= sizeof(*vht_cap)) {
@@ -1237,6 +1244,8 @@ static int __ath11k_mac_setup_bcn_tmpl(s
 				    WLAN_OUI_TYPE_MICROSOFT_WPA,
 				    ies, (skb_tail_pointer(bcn) - ies)))
 		arvif->wpaie_present = true;
+	else
+		arvif->wpaie_present = false;
 
 	if (ema_cnt) {
 		ema_param = ema_cnt << WMI_BEACON_EMA_PARAM_PERIODICITY_SHIFT;
@@ -3952,9 +3961,7 @@ static int ath11k_install_key(struct ath
 		arg.group_key_idx = key->hw_key_idx;
 
 	if (cmd == DISABLE_KEY) {
-		/* TODO: Check if FW expects  value other than NONE for del */
-		/* arg.key_cipher = WMI_CIPHER_NONE; */
-		arg.key_len = 0;
+		arg.key_cipher = WMI_CIPHER_NONE;
 		arg.key_data = NULL;
 		goto install;
 	}
--- a/drivers/net/wireless/ath/ath11k/wmi.c
+++ b/drivers/net/wireless/ath/ath11k/wmi.c
@@ -2006,7 +2006,8 @@ int ath11k_wmi_vdev_install_key(struct a
 	tlv = (struct wmi_tlv *)(skb->data + sizeof(*cmd));
 	tlv->header = FIELD_PREP(WMI_TLV_TAG, WMI_TAG_ARRAY_BYTE) |
 		      FIELD_PREP(WMI_TLV_LEN, key_len_aligned);
-	memcpy(tlv->value, (u8 *)arg->key_data, key_len_aligned);
+	if (arg->key_data)
+		memcpy(tlv->value, (u8 *)arg->key_data, key_len_aligned);
 
 	ret = ath11k_wmi_cmd_send(wmi, skb, WMI_VDEV_INSTALL_KEY_CMDID);
 	if (ret) {
