From: John Crispin <john@phrozen.org>
Subject: [PATCH V4 2/6] bss_coloring: add the code required to generate the
 CCA IE
Date: Wed, 26 Aug 2020 08:22:12 +0200


This IE is similar to the CSA one. It contains a counter and the target
color. Once the counter expired, the change to the new color happens.

Signed-off-by: John Crispin <john@phrozen.org>
---
 src/ap/beacon.c              | 12 ++++++++++++
 src/ap/ieee802_11.h          |  1 +
 src/ap/ieee802_11_he.c       | 14 ++++++++++++++
 src/common/ieee802_11_defs.h |  1 +
 4 files changed, 28 insertions(+)

Index: hostapd-2021-02-08/src/ap/beacon.c
===================================================================
--- hostapd-2021-02-08.orig/src/ap/beacon.c
+++ hostapd-2021-02-08/src/ap/beacon.c
@@ -592,11 +592,17 @@ static u8 * hostapd_gen_probe_resp(struc
 
 #ifdef CONFIG_IEEE80211AX
 	if (hapd->iconf->ieee80211ax && !hapd->conf->disable_11ax) {
+		u8 *cca_pos;
+
 		pos = hostapd_eid_he_capab(hapd, pos, IEEE80211_MODE_AP);
 		pos = hostapd_eid_he_operation(hapd, pos);
 		pos = hostapd_eid_spatial_reuse(hapd, pos);
 		pos = hostapd_eid_he_mu_edca_parameter_set(hapd, pos);
 		pos = hostapd_eid_he_6ghz_band_cap(hapd, pos);
+		cca_pos = hostapd_eid_cca(hapd, pos);
+		if (cca_pos != pos)
+			hapd->cca_c_off_proberesp = cca_pos - (u8 *) resp - 2;
+		pos = cca_pos;
 	}
 #endif /* CONFIG_IEEE80211AX */
 
@@ -1646,12 +1652,18 @@ int ieee802_11_build_ap_params(struct ho
 
 #ifdef CONFIG_IEEE80211AX
 	if (hapd->iconf->ieee80211ax && !hapd->conf->disable_11ax) {
+		u8 *cca_pos;
+
 		tailpos = hostapd_eid_he_capab(hapd, tailpos,
 					       IEEE80211_MODE_AP);
 		tailpos = hostapd_eid_he_operation(hapd, tailpos);
 		tailpos = hostapd_eid_spatial_reuse(hapd, tailpos);
 		tailpos = hostapd_eid_he_mu_edca_parameter_set(hapd, tailpos);
 		tailpos = hostapd_eid_he_6ghz_band_cap(hapd, tailpos);
+		cca_pos = hostapd_eid_cca(hapd, tailpos);
+		if (cca_pos != tailpos)
+			hapd->cca_c_off_beacon = cca_pos - tail - 2;
+		tailpos = cca_pos;
 	}
 #endif /* CONFIG_IEEE80211AX */
 
Index: hostapd-2021-02-08/src/ap/ieee802_11.h
===================================================================
--- hostapd-2021-02-08.orig/src/ap/ieee802_11.h
+++ hostapd-2021-02-08/src/ap/ieee802_11.h
@@ -100,6 +100,7 @@ u16 copy_sta_he_6ghz_capab(struct hostap
 			   const u8 *he_6ghz_capab);
 int hostapd_get_he_twt_responder(struct hostapd_data *hapd,
 				 enum ieee80211_op_mode mode);
+u8 * hostapd_eid_cca(struct hostapd_data *hapd, u8 *eid);
 void hostapd_tx_status(struct hostapd_data *hapd, const u8 *addr,
 		       const u8 *buf, size_t len, int ack);
 void hostapd_eapol_tx_status(struct hostapd_data *hapd, const u8 *dst,
Index: hostapd-2021-02-08/src/ap/ieee802_11_he.c
===================================================================
--- hostapd-2021-02-08.orig/src/ap/ieee802_11_he.c
+++ hostapd-2021-02-08/src/ap/ieee802_11_he.c
@@ -521,3 +521,17 @@ int hostapd_get_he_twt_responder(struct
 
 	return !!(mac_cap[HE_MAC_CAPAB_0] & HE_MACCAP_TWT_RESPONDER);
 }
+
+
+u8 * hostapd_eid_cca(struct hostapd_data *hapd, u8 *eid)
+{
+	if (!hapd->cca_in_progress)
+		return eid;
+	*eid++ = WLAN_EID_EXTENSION;
+	*eid++ = 3;
+	*eid++ = WLAN_EID_EXT_COLOR_CHANGE_ANNOUNCEMENT;
+	*eid++ = hapd->cca_count;
+	*eid++ = hapd->cca_color;
+
+	return eid;
+}
Index: hostapd-2021-02-08/src/common/ieee802_11_defs.h
===================================================================
--- hostapd-2021-02-08.orig/src/common/ieee802_11_defs.h
+++ hostapd-2021-02-08/src/common/ieee802_11_defs.h
@@ -480,6 +480,7 @@
 #define WLAN_EID_EXT_HE_OPERATION 36
 #define WLAN_EID_EXT_HE_MU_EDCA_PARAMS 38
 #define WLAN_EID_EXT_SPATIAL_REUSE 39
+#define WLAN_EID_EXT_COLOR_CHANGE_ANNOUNCEMENT 42
 #define WLAN_EID_EXT_OCV_OCI 54
 #define WLAN_EID_EXT_SHORT_SSID_LIST 58
 #define WLAN_EID_EXT_HE_6GHZ_BAND_CAP 59
