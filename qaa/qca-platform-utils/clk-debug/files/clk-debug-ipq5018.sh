: '
/*
 * Copyright (c) 2019 Qualcomm Technologies, Inc.
 *
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */
'

#!/bin/ash

GCC_SYS_NOC_AXI_CBCR=0x01826020
GCC_SYS_NOC_USB0_AXI_CBCR=0x01826040
GCC_SYS_NOC_QDSS_STM_AXI_CBCR=0x01826024
GCC_SYS_NOC_APSS_AHB_CBCR=0x01826028
GCC_SNOC_PCNOC_AHB_CBCR=0x0182602C
GCC_SNOC_GMAC0_AXI_CBCR=0x01826084
GCC_SYS_NOC_AT_CBCR=0x01826030
GCC_SNOC_GMAC1_AXI_CBCR=0x01826088
GCC_PCNOC_AHB_CBCR=0x0182701C
GCC_SNOC_TS_CBCR=0x01826038
GCC_PCNOC_AT_CBCR=0x01827028
GCC_DCC_CBCR=0x01877004
GCC_SNOC_LPASS_SWAY_CBCR=0x01826078
GCC_SNOC_LPASS_AXIM_CBCR=0x01826074
GCC_GP1_CBCR=0x01808000
GCC_GP2_CBCR=0x01809000
GCC_GP3_CBCR=0x0180A000
GCC_SNOC_DDRSS_SLV0_AXI_CBCR=0x0182608C
GCC_SNOC_DDRSS_SLV1_AXI_CBCR=0x01826090
GCC_SNOC_GMAC0_AHB_CBCR=0x018260A0
GCC_SNOC_GMAC1_AHB_CBCR=0x018260A4
GCC_APC0_VOLTAGE_DROOP_DETECTOR_GPLL0_CBCR=0x01878004
GCC_ADSS_PWM_CBCR=0x0181F020
GCC_IMEM_AXI_CBCR=0x0180E004
GCC_IMEM_CFG_AHB_CBCR=0x0180E008
GCC_PCIE0_AHB_CBCR=0x01875010
GCC_PCIE0_AXI_M_CBCR=0x01875008
GCC_PCIE0_AXI_S_CBCR=0x0187500C
GCC_PCIE0_AUX_CBCR=0x01875014
GCC_PCIE0_AXI_S_BRIDGE_CBCR=0x01875048
GCC_PCIE1_AHB_CBCR=0x01876010
GCC_PCIE1_AXI_M_CBCR=0x01876008
GCC_PCIE1_AXI_S_CBCR=0x0187600C
GCC_PCIE1_AUX_CBCR=0x01876014
GCC_PCIE1_AXI_S_BRIDGE_CBCR=0x01876048
GCC_LPASS_CORE_AXIM_CBCR=0x0182E048
GCC_LPASS_SWAY_CBCR=0x0182E04C
GCC_QDSS_DAP_AHB_CBCR=0x01829004
GCC_QDSS_CFG_AHB_CBCR=0x01829008
GCC_QDSS_AT_CBCR=0x01829024
GCC_QDSS_ETR_USB_CBCR=0x01829028
GCC_QDSS_STM_CBCR=0x01829044
GCC_QDSS_TRACECLKIN_CBCR=0x01829060
GCC_QDSS_TSCTR_DIV2_CBCR=0x0182907C
GCC_QDSS_APB2JTAG_CBCR=0x01829094
GCC_QDSS_TSCTR_DIV3_CBCR=0x01829080
GCC_QDSS_DAP_CBCR=0x01829084
GCC_QDSS_TSCTR_DIV4_CBCR=0x01829088
GCC_QDSS_TSCTR_DIV8_CBCR=0x0182908C
GCC_QDSS_TSCTR_DIV16_CBCR=0x01829090
GCC_QDSS_EUD_AT_CBCR=0x01829020
GCC_USB0_EUD_AT_CBCR=0x0183E04C
GCC_BTSS_LPO_CBCR=0x0181C004
GCC_USB0_LFPS_CBCR=0x0183E050
GCC_USB0_MASTER_CBCR=0x0183E000
GCC_USB0_SLEEP_CBCR=0x0183E004
GCC_USB0_MOCK_UTMI_CBCR=0x0183E008
GCC_USB0_PHY_CFG_AHB_CBCR=0x0183E080
GCC_USB0_AUX_CBCR=0x0183E044
GCC_SDCC1_APPS_CBCR=0x01842018
GCC_SDCC1_AHB_CBCR=0x0184201C
GCC_BLSP1_AHB_CBCR=0x01801008
GCC_BLSP1_SLEEP_CBCR=0x01801004
GCC_BLSP1_QUP1_SPI_APPS_CBCR=0x01802004
GCC_BLSP1_QUP1_I2C_APPS_CBCR=0x01802008
GCC_BLSP1_UART1_APPS_CBCR=0x0180203C
GCC_BLSP1_QUP2_SPI_APPS_CBCR=0x0180300C
GCC_BLSP1_QUP2_I2C_APPS_CBCR=0x01803010
GCC_BLSP1_UART2_APPS_CBCR=0x0180302C
GCC_BLSP1_QUP3_SPI_APPS_CBCR=0x0180400C
GCC_BLSP1_QUP3_I2C_APPS_CBCR=0x01804010
GCC_GEPHY_RX_CBCR=0x01856010
GCC_GEPHY_TX_CBCR=0x01856014
GCC_UNIPHY_AHB_CBCR=0x01856108
GCC_UNIPHY_SYS_CBCR=0x0185610C
GCC_UNIPHY_RX_CBCR=0x01856110
GCC_UNIPHY_TX_CBCR=0x01856114
GCC_PCNOC_MPU_CFG_AHB_CBCR=0x
GCC_Q6SS_TRIG_CBCR=0x01859128
GCC_Q6_AXIM_CBCR=0x0185913C
GCC_Q6_AXIM2_CBCR=0x01859150
GCC_Q6_AHB_CBCR=0x01859138
GCC_Q6_AHB_S_CBCR=0x0185914C
GCC_Q6SS_ATBM_CBCR=0x01859144
GCC_Q6_TSCTR_1TO2_CBCR=0x01859148
GCC_Q6SS_PCLKDBG_CBCR=0x01859140
GCC_CMN_BLK_AHB_CBCR=0x01856308
GCC_CMN_BLK_SYS_CBCR=0x0185630C
GCC_WCSS_AXI_S_CBCR=0x01859068
GCC_WCSS_AHB_S_CBCR=0x01859034
GCC_WCSS_ECAHB_CBCR=0x01859038
GCC_Q6_AXIS_CBCR=0x01859154
GCC_WCSS_ACMT_CBCR=0x01859064
GCC_WCSS_AXI_M_CBCR=0x0185903C
GCC_WCSS_DBG_IFC_APB_CBCR=0x01859040
GCC_WCSS_DBG_IFC_ATB_CBCR=0x01859044
GCC_WCSS_DBG_IFC_NTS_CBCR=0x01859048
GCC_WCSS_DBG_IFC_DAPBUS_CBCR=0x0185905C
GCC_WCSS_DBG_IFC_APB_BDG_CBCR=0x01859050
GCC_WCSS_DBG_IFC_ATB_BDG_CBCR=0x01859054
GCC_WCSS_DBG_IFC_NTS_BDG_CBCR=0x01859058
GCC_WCSS_DBG_IFC_DAPBUS_BDG_CBCR=0x01859060
GCC_TCSR_AHB_CBCR=0x01828004
GCC_PRNG_AHB_CBCR=0x01813004
GCC_MDIO0_AHB_CBCR=0x01858004
GCC_MDIO1_AHB_CBCR=0x01858014
GCC_BOOT_ROM_AHB_CBCR=0x0181300C
GCC_TLMM_AHB_CBCR=0x01834004
GCC_TLMM_CBCR=0x01834008
GCC_MPM_AHB_CBCR=0x0182C008
GCC_SEC_CTRL_ACC_CBCR=0x0181A020
GCC_SEC_CTRL_AHB_CBCR=0x0181A024
GCC_SEC_CTRL_CBCR=0x0181A028
GCC_SEC_CTRL_SENSE_CBCR=0x0181A02C
GCC_SEC_CTRL_BOOT_ROM_PATCH_CBCR=0x0181A030
GCC_SPDM_CFG_AHB_CBCR=0x0182F004
GCC_SPDM_MSTR_AHB_CBCR=0x0182F008
GCC_SPDM_FF_CBCR=0x0182F00C
GCC_SPDM_SNOC_CY_CBCR=0x0182F010
GCC_SPDM_PCNOC_CY_CBCR=0x0182F018
GCC_CRYPTO_CBCR=0x0181601C
GCC_CRYPTO_AXI_CBCR=0x01816020
GCC_CRYPTO_AHB_CBCR=0x01816024
GCC_SYS_NOC_PCIE0_AXI_CBCR=0x01826048
GCC_SYS_NOC_WCSS_AHB_CBCR=0x01826034
GCC_SYS_NOC_TPRB_CBCR=0x01826068
GCC_SNOC_QOSGEN_EXTREF_CBCR=0x0182601C
GCC_AHB_CBCR=0x01830014
GCC_XO_CBCR=0x01830030
GCC_XO_DIV4_CBCR=0x01830034
GCC_IM_SLEEP_CBCR=0x01830038
GCC_DDRSS_AHB_CBCR=0x0181D01C
GCC_SNOC_Q6_AXI_CBCR=0x0182609C
GCC_SNOC_UBI0_AXI_CBCR=0x01826094
GCC_SNOC_APSS_AXI_CBCR=0x01826098
GCC_DDRSS_SLV0_AXI_CBCR=0x0181D020
GCC_DDRSS_SLV1_AXI_CBCR=0x0181D024
GCC_APSS_AHB_CBCR=0x0184601C
GCC_APSS_AXI_CBCR=0x01846020
GCC_PCNOC_BUS_TIMEOUT0_AHB_CBCR=0x01848004
GCC_PCNOC_BUS_TIMEOUT1_AHB_CBCR=0x0184800C
GCC_PCNOC_BUS_TIMEOUT2_AHB_CBCR=0x01848014
GCC_PCNOC_BUS_TIMEOUT3_AHB_CBCR=0x0184801C
GCC_PCNOC_BUS_TIMEOUT4_AHB_CBCR=0x01848024
GCC_PCNOC_BUS_TIMEOUT5_AHB_CBCR=0x0184802C
GCC_PCNOC_BUS_TIMEOUT6_AHB_CBCR=0x01848034
GCC_PCNOC_BUS_TIMEOUT7_AHB_CBCR=0x0184803C
GCC_PCNOC_BUS_TIMEOUT8_AHB_CBCR=0x01848044
GCC_PCNOC_BUS_TIMEOUT9_AHB_CBCR=0x0184804C
GCC_PCNOC_BUS_TIMEOUT10_AHB_CBCR=0x01848054
GCC_PCNOC_BUS_TIMEOUT11_AHB_CBCR=0x0184805C
GCC_DCD_XO_CBCR=0x0182A004
GCC_CMN_LDO_AHB_CBCR=0x01833004
GCC_CMN_LDO_SYS_CBCR=0x01833008
GCC_EDPD_AXI_CBCR=0x0183A004
GCC_EDPD_AHB_CBCR=0x0183A008
GCC_CE_AXI_CBCR=0x01833018
GCC_CE_PCNOC_AHB_CBCR=0x0183301C
GCC_CE_AHB_CBCR=0x01833020
GCC_QPIC_AHB_CBCR=0x01857024
GCC_QPIC_CBCR=0x01857020
GCC_QPIC_SLEEP_CBCR=0x01857028
GCC_QPIC_IO_MACRO_CBCR=0x0185701C
GCC_GMAC0_RX_CBCR=0x01868240
GCC_GMAC0_TX_CBCR=0x01868244
GCC_GMAC1_RX_CBCR=0x01868248
GCC_GMAC1_TX_CBCR=0x0186824C
GCC_GMAC0_SYS_CBCR=0x01868190
GCC_GMAC0_PTP_CBCR=0x01868300
GCC_GMAC0_CFG_CBCR=0x01868304
GCC_GMAC1_SYS_CBCR=0x01868310
GCC_GMAC1_PTP_CBCR=0x01868320
GCC_GMAC1_CFG_CBCR=0x01868324
GCC_UBI0_CORE_CBCR=0x01868210
GCC_UBI0_DBG_CBCR=0x01868214
GCC_UBI0_AXI_CBCR=0x01868200
GCC_UBI0_NC_AXI_CBCR=0x01868204
GCC_UBI0_UTCM_CBCR=0x01868208
GCC_UBI0_CFG_CBCR=0x01868160

function calculate_clk(){
GCC_GCC_DEBUG_CLK_CTL=0x01874000
GCC_GCC_XO_DIV4_CBCR=0x01830034
GCC_CLOCK_FRQ_MEASURE_CTL=0x01874004
GCC_CLOCK_FRQ_MEASURE_STATUS=0x01874008
GCC_GCC_XO_CBCR=0x01830030
FREQ_XO_DIV4=6
Bit16=65536
Bit20=1048576
Bit25=33554432
Bit31=2147483648
RandomCnt1=67584
RandomCnt2=67618
Constant1pt5=1.5
Constant3pt5=3.5
post_div=12288
multiplier=4
bcalculateclk=0

#Reading user input for clock selection
#echo Provide the Mux selection for DEBUG_CLK_CTL

ClockSel=$2
#echo entered clock $ClockSel

#Select clock mux and write on memory
var1=$(expr "$ClockSel" + "$Bit16" + "$post_div")
devmem $GCC_GCC_DEBUG_CLK_CTL 32 $var1
#echo mux $var1

#Disable Freq Measure control
devmem $GCC_CLOCK_FRQ_MEASURE_CTL 32 0x0

#Write Freq Measure control with random count with Bit20 set
devmem $GCC_CLOCK_FRQ_MEASURE_CTL 32 $(expr "$RandomCnt1" + "$Bit20")

#Read Frq measure status
var1=$(devmem $GCC_CLOCK_FRQ_MEASURE_STATUS)
#echo Freq Measure Status First Cnt : $var1
#Convert the var1 to decimal
var1=$(($var1))

#Check the Bit25 for counter terminates or not
while [ $var1 -le $Bit25 ]
do
var1=$(devmem $GCC_CLOCK_FRQ_MEASURE_STATUS)
#echo Freq Measure Status First Cnt : $var1
#convert the value to decimal
var1=$(($var1))
done

#Get the CBCR Register name
cbcrname=$1
#echo cbcr $cbcrname

cbcrstring=CBCR

cbcrname=${cbcrname/CLK/$cbcrstring}

#Get the Address
eval "cbcraddress=\${$cbcrname}"
#echo cbcraddress $cbcraddress
#print clock name
printf "%s""$1";

#Check for CBCR register is present or not
if [ "$(($cbcraddress))" == 0 ]
then
#No CBCR register is present for this clock, check for register differences
#Disable Freq Measure control
devmem $GCC_CLOCK_FRQ_MEASURE_CTL 32 0x0

#Load again Freq Measure control with next random count with Bit20 set
devmem $GCC_CLOCK_FRQ_MEASURE_CTL 32 $(expr "$RandomCnt2" + "$Bit20")

#Read Frq measure status
var2=$(devmem $GCC_CLOCK_FRQ_MEASURE_STATUS)
#echo Freq Measure Status Second Cnt : $var2
#Convert the var2 to decimal
var2=$(($var2))

#Check the Bit25 for counter terminates or not
while [ $var2 -le $Bit25 ]
do
var2=$(devmem $GCC_CLOCK_FRQ_MEASURE_STATUS)
#echo Freq Measure Status Second Cnt : $var2
#convert the value to decimal
var2=$(($var2))
done

if [ "$var1" == "$var2" ]
then
printf "\t\t\t""OFF \t\tnone";
else
bcalculateclk=1
printf "\t\t\t""ON \t\tnone";
fi

else
#CBCR register is present for this clock, read CBCR register
clkstate=$(devmem $cbcraddress)
#check Clock is enabled or not
if [ "$(($clkstate))" -ge "$Bit31" ]
then
printf "\t\t\t""OFF \t\tcbcr";
else
#Set clock read to ONE
bcalculateclk=1
printf "\t\t\t""ON \t\tcbcr";
fi
fi
if [ "$bcalculateclk" == 1 ]
then
#Eliminate the Bit25 in Frq Measure status
var1=$(expr "$var1" - "$Bit25")

#Measure_CNT+1.5
var2=`echo - | awk '{print "'"$var1"'" + "'"$Constant1pt5"'" }'`

#XO_DIV4_TERM_CNT+3.5
var3=`echo - | awk '{print "'"$RandomCnt1"'" + "'"$Constant3pt5"'" }'`

#Freq(XO_DIV4)*var2/var3
var1=`echo - | awk '{print "'"$FREQ_XO_DIV4"'" *  "'"$var2"'" }'`
var2=`echo - | awk '{print "'"$var1"'" /  "'"$var3"'" }'`

#Apply multiplier
var2=`echo - | awk '{print "'"$var2"'" *  "'"$multiplier"'" }'`

#convert to Hz
var3=`echo - | awk '{print "'"$var2"'" * "'"1000000"'" }'`
printf "\t%12.0f" "$var3";

else
printf "\t----------";
fi
printf "\r\n"

}

inputstr=$1
if [[ "$inputstr" == HELP || "$inputstr" == help ]]
then
echo "Execute the script and grep for desired register string"
exit 0
fi

echo -e "   Clock Name   \t State \t CBCR Type \t Frequency(Hz)"
echo "--------------------------------------------------------------------------"

calculate_clk GCC_SYS_NOC_AXI_CLK	0
calculate_clk GCC_SYS_NOC_USB0_AXI_CLK	1
calculate_clk GCC_SYS_NOC_QDSS_STM_AXI_CLK	2
calculate_clk GCC_SYS_NOC_APSS_AHB_CLK	3
calculate_clk GCC_SNOC_PCNOC_AHB_CLK	4
calculate_clk GCC_SNOC_GMAC0_AXI_CLK	5
calculate_clk GCC_SYS_NOC_AT_CLK	6
calculate_clk GCC_SNOC_GMAC1_AXI_CLK	7
calculate_clk GCC_PCNOC_AHB_CLK	8
calculate_clk GCC_SNOC_TS_CLK	10
calculate_clk GCC_PCNOC_TIC_CLK	11
calculate_clk GCC_PCNOC_AT_CLK	12
calculate_clk GCC_DCC_CLK	13
calculate_clk GCC_SNOC_LPASS_SWAY_CLK	14
calculate_clk GCC_SNOC_LPASS_AXIM_CLK	15
calculate_clk GCC_GP1_CLK	16
calculate_clk GCC_GP2_CLK	17
calculate_clk GCC_GP3_CLK	18
calculate_clk GCC_SNOC_DDRSS_SLV0_AXI_CLK	19
calculate_clk GCC_SNOC_DDRSS_SLV1_AXI_CLK	20
calculate_clk GCC_SNOC_GMAC0_AHB_CLK	21
calculate_clk GCC_SNOC_GMAC1_AHB_CLK	22
calculate_clk GCC_APC0_VOLTAGE_DROOP_DETECTOR_GPLL0_CLK	28
calculate_clk MPM_GCC_TEMP_SENSOR_RINGOSC_CLK	29
calculate_clk GCC_ADSS_PWM_CLK	30
calculate_clk GCC_IMEM_AXI_CLK	32
calculate_clk GCC_IMEM_CFG_AHB_CLK	33
calculate_clk GCC_PCIE0_AHB_CLK	41
calculate_clk GCC_PCIE0_AXI_M_CLK	42
calculate_clk GCC_PCIE0_AXI_S_CLK	43
calculate_clk GCC_PCIE0_AUX_CLK	44
calculate_clk GCC_PCIE0_AXI_S_BRIDGE_CLK	45
calculate_clk GCC_PCIE1_AHB_CLK	49
calculate_clk GCC_PCIE1_AXI_M_CLK	50
calculate_clk GCC_PCIE1_AXI_S_CLK	51
calculate_clk GCC_PCIE1_AUX_CLK	52
calculate_clk GCC_PCIE1_AXI_S_BRIDGE_CLK	53
calculate_clk GCC_LPASS_CORE_AXIM_CLK	54
calculate_clk GCC_LPASS_SWAY_CLK	55
calculate_clk GEPHY_GCC_RX_CLK	56
calculate_clk GEPHY_GCC_TX_CLK	57
calculate_clk UNIPHY_GCC_RX_CLK	58
calculate_clk UNIPHY_GCC_TX_CLK	59
calculate_clk LPASS_DBG_CLK	61
calculate_clk GCC_QDSS_DAP_AHB_CLK	64
calculate_clk GCC_QDSS_CFG_AHB_CLK	65
calculate_clk GCC_QDSS_AT_CLK	66
calculate_clk GCC_QDSS_ETR_USB_CLK	67
calculate_clk GCC_QDSS_STM_CLK	68
calculate_clk GCC_QDSS_TRACECLKIN_CLK	69
calculate_clk GCC_QDSS_TSCTR_DIV2_CLK	70
calculate_clk GCC_QDSS_APB2JTAG_CLK	71
calculate_clk GCC_QDSS_TSCTR_DIV3_CLK	72
calculate_clk GCC_QDSS_DAP_CLK	73
calculate_clk GCC_QDSS_TSCTR_DIV4_CLK	74
calculate_clk GCC_QDSS_TSCTR_DIV8_CLK	75
calculate_clk GCC_QDSS_TSCTR_DIV16_CLK	76
calculate_clk GCC_QDSS_EUD_AT_CLK	77
calculate_clk GCC_USB0_EUD_AT_CLK	78
calculate_clk GCC_BTSS_LPO_CLK	81
calculate_clk GCC_USB0_LFPS_CLK	82
calculate_clk GPLL0_OUT_TEST	88
calculate_clk GPLL2_OUT_TEST	90
calculate_clk GPLL4_OUT_TEST	92
calculate_clk UBI32_PLL_OUT_TEST	95
calculate_clk GCC_USB0_MASTER_CLK	96
calculate_clk GCC_USB0_SLEEP_CLK	97
calculate_clk GCC_USB0_MOCK_UTMI_CLK	98
calculate_clk GCC_USB0_PHY_CFG_AHB_CLK	99
calculate_clk USB0_HSPW_CLK_480M_TEST	100
calculate_clk USB30S_0_UTMI_CLK	101
calculate_clk GCC_USB0_AUX_CLK	103
calculate_clk GCC_SDCC1_APPS_CLK	104
calculate_clk GCC_SDCC1_AHB_CLK	105
calculate_clk GCC_BLSP1_AHB_CLK	136
calculate_clk GCC_BLSP1_SLEEP_CLK	137
calculate_clk GCC_BLSP1_QUP1_SPI_APPS_CLK	138
calculate_clk GCC_BLSP1_QUP1_I2C_APPS_CLK	139
calculate_clk GCC_BLSP1_UART1_APPS_CLK	140
calculate_clk GCC_BLSP1_QUP2_SPI_APPS_CLK	142
calculate_clk GCC_BLSP1_QUP2_I2C_APPS_CLK	144
calculate_clk GCC_BLSP1_UART2_APPS_CLK	145
calculate_clk GCC_BLSP1_QUP3_SPI_APPS_CLK	147
calculate_clk GCC_BLSP1_QUP3_I2C_APPS_CLK	148
calculate_clk GCC_GEPHY_RX_CLK	170
calculate_clk GCC_GEPHY_TX_CLK	171
calculate_clk GCC_UNIPHY_AHB_CLK	176
calculate_clk GCC_UNIPHY_SYS_CLK	177
calculate_clk GCC_UNIPHY_RX_CLK	178
calculate_clk GCC_UNIPHY_TX_CLK	179
calculate_clk GCC_PCNOC_MPU_CFG_AHB_CLK	193
calculate_clk GCC_Q6SS_TRIG_CLK	199
calculate_clk GCC_Q6_AXIM_CLK	200
calculate_clk GCC_Q6_AXIM2_CLK	201
calculate_clk GCC_Q6_AHB_CLK	202
calculate_clk GCC_Q6_AHB_S_CLK	203
calculate_clk GCC_Q6SS_ATBM_CLK	204
calculate_clk GCC_Q6_TSCTR_1TO2_CLK	205
calculate_clk GCC_Q6SS_PCLKDBG_CLK	206
calculate_clk Q6SS_GCC_DBG_CLK	207
calculate_clk GCC_CMN_BLK_AHB_CLK	208
calculate_clk GCC_CMN_BLK_SYS_CLK	209
calculate_clk GCC_WCSS_AXI_S_CLK	215
calculate_clk GCC_WCSS_AHB_S_CLK	216
calculate_clk GCC_WCSS_ECAHB_CLK	217
calculate_clk GCC_Q6_AXIS_CLK	218
calculate_clk GCC_WCSS_ACMT_CLK	220
calculate_clk GCC_WCSS_AXI_M_CLK	221
calculate_clk WCSS_GCC_DBG_CLK	222
calculate_clk WCSS_ZINC_DBG_OUT_CLK	223
calculate_clk GCC_WCSS_DBG_IFC_APB_CLK	224
calculate_clk GCC_WCSS_DBG_IFC_ATB_CLK	225
calculate_clk GCC_WCSS_DBG_IFC_NTS_CLK	226
calculate_clk GCC_WCSS_DBG_IFC_DAPBUS_CLK	227
calculate_clk GCC_WCSS_DBG_IFC_APB_BDG_CLK	228
calculate_clk GCC_WCSS_DBG_IFC_ATB_BDG_CLK	229
calculate_clk GCC_WCSS_DBG_IFC_NTS_BDG_CLK	230
calculate_clk GCC_WCSS_DBG_IFC_DAPBUS_BDG_CLK	231
calculate_clk GCC_TCSR_AHB_CLK	232
calculate_clk GCC_TIC_CLK	233
calculate_clk GCC_PRNG_AHB_CLK	236
calculate_clk GCC_MDIO0_AHB_CLK	237
calculate_clk GCC_MDIO1_AHB_CLK	239
calculate_clk GCC_BOOT_ROM_AHB_CLK	248
calculate_clk GCC_TLMM_AHB_CLK	264
calculate_clk GCC_TLMM_CLK	265
calculate_clk GCC_MPM_AHB_CLK	272
calculate_clk GCC_SEC_CTRL_ACC_CLK	288
calculate_clk GCC_SEC_CTRL_AHB_CLK	289
calculate_clk GCC_SEC_CTRL_CLK	290
calculate_clk GCC_SEC_CTRL_SENSE_CLK	291
calculate_clk GCC_SEC_CTRL_BOOT_ROM_PATCH_CLK	292
calculate_clk GCC_SPDM_CFG_AHB_CLK	304
calculate_clk GCC_SPDM_MSTR_AHB_CLK	305
calculate_clk GCC_SPDM_FF_CLK	306
calculate_clk GCC_SPDM_SNOC_CY_CLK	308
calculate_clk GCC_SPDM_PCNOC_CY_CLK	309
calculate_clk GCC_CRYPTO_CLK	312
calculate_clk GCC_CRYPTO_AXI_CLK	313
calculate_clk GCC_CRYPTO_AHB_CLK	314
calculate_clk GCC_SYS_NOC_PCIE0_AXI_CLK	320
calculate_clk GCC_SYS_NOC_WCSS_AHB_CLK	322
calculate_clk GCC_SYS_NOC_TPRB_CLK	323
calculate_clk GCC_SNOC_QOSGEN_EXTREF_CLK	324
calculate_clk GCC_AHB_CLK	328
calculate_clk GCC_XO_CLK	329
calculate_clk GCC_XO_DIV4_CLK	330
calculate_clk GCC_IM_SLEEP_CLK	331
calculate_clk GCC_DDRSS_AHB_CLK	337
calculate_clk GCC_SNOC_Q6_AXI_CLK	338
calculate_clk GCC_SNOC_UBI0_AXI_CLK	339
calculate_clk GCC_SNOC_APSS_AXI_CLK	341
calculate_clk GCC_DDRSS_SLV0_AXI_CLK	352
calculate_clk GCC_DDRSS_SLV1_AXI_CLK	353
calculate_clk GCC_APSS_AHB_CLK	360
calculate_clk GCC_APSS_AXI_CLK	361
calculate_clk APSS_GCC_DBG_CLK	362
calculate_clk GCC_PCNOC_BUS_TIMEOUT0_AHB_CLK	376
calculate_clk GCC_PCNOC_BUS_TIMEOUT1_AHB_CLK	377
calculate_clk GCC_PCNOC_BUS_TIMEOUT2_AHB_CLK	378
calculate_clk GCC_PCNOC_BUS_TIMEOUT3_AHB_CLK	379
calculate_clk GCC_PCNOC_BUS_TIMEOUT4_AHB_CLK	380
calculate_clk GCC_PCNOC_BUS_TIMEOUT5_AHB_CLK	384
calculate_clk GCC_PCNOC_BUS_TIMEOUT6_AHB_CLK	385
calculate_clk GCC_PCNOC_BUS_TIMEOUT7_AHB_CLK	386
calculate_clk GCC_PCNOC_BUS_TIMEOUT8_AHB_CLK	387
calculate_clk GCC_PCNOC_BUS_TIMEOUT9_AHB_CLK	388
calculate_clk GCC_PCNOC_BUS_TIMEOUT10_AHB_CLK	389
calculate_clk GCC_PCNOC_BUS_TIMEOUT11_AHB_CLK	390
calculate_clk GCC_DCD_XO_CLK	392
calculate_clk GCC_CMN_LDO_AHB_CLK	400
calculate_clk GCC_CMN_LDO_SYS_CLK	401
calculate_clk GCC_EDPD_AXI_CLK	414
calculate_clk GCC_EDPD_AHB_CLK	415
calculate_clk GCC_CE_AXI_CLK	416
calculate_clk GCC_CE_PCNOC_AHB_CLK	417
calculate_clk GCC_CE_AHB_CLK	418
calculate_clk GCC_QPIC_AHB_CLK	432
calculate_clk GCC_QPIC_CLK	433
calculate_clk GCC_QPIC_SLEEP_CLK	434
calculate_clk GCC_QPIC_IO_MACRO_CLK	435
calculate_clk GPLL0_DTEST	440
calculate_clk GPLL2_DTEST	441
calculate_clk GPLL4_DTEST	442
calculate_clk UBI32_PLL_DTEST	443
calculate_clk Q6SS_PLL_DTEST	444
calculate_clk GCC_GMAC0_RX_CLK	456
calculate_clk GCC_GMAC0_TX_CLK	457
calculate_clk GCC_GMAC1_RX_CLK	458
calculate_clk GCC_GMAC1_TX_CLK	459
calculate_clk APSS_GCC_PLL0_TEST_CLK	464
calculate_clk LPASS_PLLOUT_LV_TEST	465
calculate_clk Q6SS_PLL_TEST_CLK	466
calculate_clk WCSS_ZINC_PLL_TEST_CLK	467
calculate_clk DDRC_PLL_TEST_CLK	468
calculate_clk GCC_GMAC0_SYS_CLK	472
calculate_clk GCC_GMAC0_PTP_CLK	473
calculate_clk GCC_GMAC0_CFG_CLK	474
calculate_clk GCC_GMAC1_SYS_CLK	475
calculate_clk GCC_GMAC1_PTP_CLK	476
calculate_clk GCC_GMAC1_CFG_CLK	477
calculate_clk GCC_UBI0_CORE_CLK	484
calculate_clk GCC_UBI0_DBG_CLK	486
calculate_clk GCC_UBI0_AXI_CLK	487
calculate_clk GCC_UBI0_NC_AXI_CLK	488
calculate_clk GCC_UBI0_UTCM_CLK	508
calculate_clk GCC_UBI0_CFG_CLK	511
