version: 2
jobs:
  prepare:
    machine:
      image: ubuntu-1604:201903-01

    working_directory: ~/

    steps:
      - run:
          name: Prepare
          command: |
            sudo rm -rf /var/lib/apt/lists/lock
            sudo apt-get update
            sudo rm -rf /var/lib/apt/lists/lock
            sudo apt-get install -yq build-essential git unzip ncurses-dev libz-dev libssl-dev python subversion gettext gawk wget curl rsync perl libelf-dev python3.5 libpython3.5-stdlib liblzma-dev
            pyenv global 3.5.2

  build_x86_64:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: x86_64
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 50m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            sudo apt-get update
            sudo apt-get install -yq libelf-dev
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 50m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_x86:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: x86
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_rpi3:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: rpi3
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_espressobin:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: espressobin
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_r2s:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: r2s
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_rpi4:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: rpi4
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_rpi2:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: rpi2
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile package/compile target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_bpi-r2:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: bpi-r2
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: |
            sudo apt-get update
            sudo apt-get -yq install swig2.0
            make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_wrt3200acm:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_TARGET: wrt3200acm
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/$OMR_TARGET/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/$OMR_TARGET/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/$OMR_TARGET/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rm -rf ~/openmptcprouter/$OMR_TARGET/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

  build_wrt32:
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - OMR_VERSION: $CIRCLE_TAG
      - OMR_KERNEL: 5.4

    working_directory: ~/

    steps:
      - run:
          name: cache
          command: |
            echo "cache 107 $OMR_KERNEL $OMR_TARGET" > /tmp/cache-target
            echo "cache 108 $OMR_KERNEL $OMR_TARGET $OMR_VERSION" > /tmp/cache-version

      - restore_cache:
          keys:
            - cache-{{ checksum "/tmp/cache-version" }}
            - cache-{{ checksum "/tmp/cache-target" }}

      - run:
          name: Build toolchain wrt3200acm
          no_output_timeout: 40m
          command: |
            git clone https://github.com/suyuan168/3grouter || true
            cd openmptcprouter
            git checkout ${CIRCLE_BRANCH:-$CIRCLE_TAG} || true
            git pull || true
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_TARGET="wrt3200acm"
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/wrt3200acm/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/wrt3200acm/source/key-build.pub

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-target" }}
          paths:
            - openmptcprouter

      - run:
          name: Build wrt3200acm
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/wrt3200acm/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy wrt3200acm
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/wrt3200acm/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/wrt3200acm
            rm -rf ~/openmptcprouter/wrt3200acm/source/bin

      - save_cache:
          key: cache-{{ checksum "/tmp/cache-version" }}
          paths:
            - openmptcprouter

      - run:
          name: Build toolchain wrt32x
          no_output_timeout: 40m
          command: |
            cd ~/openmptcprouter/
            export OMR_PATH="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_FEED_URL="$CIRCLE_REPOSITORY_URL"
            export OMR_FEED_SRC="${CIRCLE_BRANCH:-$CIRCLE_TAG}"
            export OMR_TARGET="wrt32x"
            ln -s wrt3200acm wrt32x
            pyenv global 3.5.2
            sh build.sh prepare {tools,toolchain}/install -j2
            echo -e "$OMR_PRIVKEY" > ~/openmptcprouter/wrt32x/source/key-build
            echo -e "$OMR_PUBKEY" > ~/openmptcprouter/wrt32x/source/key-build.pub

      - run:
          name: Build wrt32x
          no_output_timeout: 40m
          command: make IGNORE_ERRORS=m -C ~/openmptcprouter/wrt32x/source package/{compile,install,index} target/compile -j2 package/compile -j2 target/install -j2

      - run:
          name: Deploy wrt32x
          command: |
            ssh -p ${OMR_DEPLOY_PORT:-22} deploy@$OMR_DEPLOY_HOST mkdir -p deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/$OMR_TARGET
            rsync -av --delete-after ~/openmptcprouter/wrt32x/source/bin/ -e "ssh -q -p ${OMR_DEPLOY_PORT:-22}" deploy@$OMR_DEPLOY_HOST:deploy/${CIRCLE_BRANCH:-release}/${CIRCLE_TAG:-$OMR_KERNEL}/wrt32x

workflows:
  version: 2
  main:
    jobs:
      - prepare:
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_x86_64:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_x86:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_rpi4:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_rpi3:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_espressobin:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_r2s:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_rpi2:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_bpi-r2:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
      - build_wrt32:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
            branches:
              only: 
                - develop
