#!/bin/sh
. /lib/functions.sh

intf=$1

timeout=$(uci -q get openmptcprouter.settings.status_getip_timeout)
[ -z "$timeout" ] && timeout="1"

get_ip_from_server() {
	[ -n "$ip" ] && return
	serverport=$(uci -q get openmptcprouter.$1.port)
	get_ip() {
		[ -n "$ip" ] && return
		getip="$(curl -s -k -6 -m ${timeout} --interface $intf https://$serverip:$serverport/clienthost)"
		[ -n "$getip" ] && getip=$(echo $getip | jsonfilter -e '@.client_host')
		if [ -n "$(echo "$getip" | grep :)" ]; then
			ip=$getip
			return
		fi
	}
	config_list_foreach $1 ip get_ip
}

get_ip_from_website() {
	check_ipv6_website="$(uci -q get openmptcprouter.settings.check_ipv6_website)"
	[ -z "$check_ipv6_website" ] && check_ipv6_website="http://ipv6.openmptcprouter.com"
	hostip=$(echo $check_ipv6_website | sed -e 's/https:\/\///' -e 's/http:\/\///' | xargs dig +nocmd +noall +answer AAAA | grep -v CNAME | awk '{print $5}' | tr -d "\n")
	if [ -n "$(ipset list 2>/dev/null | grep ss_rules6)" ]; then
		for ip in $hostip; do
			ipset add ss_rules6_dst_bypass_all $ip >/dev/null 2>&1
		done
	fi
	if [ -n "$(nft list set inet fw4 omr_dst_bypass_all_6 2>/dev/null)" ]; then
		for ip in $hostip; do
			nft add element inet fw4 omr_dst_bypass_all_6 { $ip } >/dev/null 2>&1
		done
	fi
	getip="$(curl -s -6 -m ${timeout} --interface $intf $check_ipv6_website)"
	if [ -n "$(ipset list 2>/dev/null | grep ss_rules6)" ]; then
		for ip in $hostip; do
			ipset del ss_rules6_dst_bypass_all $ip >/dev/null 2>&1
		done
	fi
	if [ -n "$(nft list set inet fw4 omr_dst_bypass_all_6 2>/dev/null)" ]; then
		for ip in $hostip; do
			nft delete element inet fw4 omr_dst_bypass_all_6 { $ip } >/dev/null 2>&1
		done
	fi
	if [ -n "$(echo "$getip" | grep :)" ]; then
		ip=$getip
	fi
}

[ -z "$intf" ] && return
if [ -n "$(ip -6 a show dev $intf)" ]; then
	ip=""
	config_load openmptcprouter
	config_foreach get_ip_from_server server
	[ -z "$ip" ] && get_ip_from_website
	echo $ip
fi